import { DayOfStudy } from "./DayOfStudy";
import { RemoteWorkRequest } from "./RemoteWorkRequest";
import { Role } from "./Role";
import { Team } from "./Team";
import { UserStatus } from "./UserStatus";


export class User {
  idUser?: number; // Optional because it is generated by the database
  name?: string;
  lastName?: string;
  password?: string;
  email?: string;
  isAlternate?: boolean;
  remoteWorkBalance?: number;
  role?: Role;
  userStatus?: UserStatus;
  hirningDate?: string; // ISO string format for LocalDate

  // Relationships
  remoteWorkRequests?: RemoteWorkRequest[];
  userTeam?: Team;
  dayOfStudy?: DayOfStudy;

  // Implementations for UserDetails interface
  getAuthorities(): string[] {
    return [this.role ? this.role.toString() : ''];
  }

  getUsername(): string {
    return this.email || '';
  }

  isAccountNonExpired(): boolean {
    return true;
  }

  isAccountNonLocked(): boolean {
    return this.userStatus !== UserStatus.BLOCKED;
  }

  isCredentialsNonExpired(): boolean {
    return true;
  }

  isEnabled(): boolean {
    return this.userStatus === UserStatus.ACTIVE;
  }
}
